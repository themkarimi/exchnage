version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: exchange_db
    environment:
      POSTGRES_DB: crypto_exchange
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: exchange_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  web:
    build: .
    container_name: exchange_web
    command: >
      sh -c "python Exchange/manage.py migrate &&
             python Exchange/manage.py create_tokens &&
             gunicorn --bind 0.0.0.0:8000 --chdir Exchange Exchange.wsgi:application"
    ports:
      - "8000:8000"
    environment:
      - DATABASE_NAME=crypto_exchange
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DEBUG=False
      - USE_MINIO=true
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=crypto-exchange
      - MINIO_USE_SSL=false
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  postgres_data:
  minio_data:
